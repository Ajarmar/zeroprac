<?xml version="1.0"?>
<!DOCTYPE binary_file_format SYSTEM "BinaryFileFormat.dtd">
<binary_file_format name="Windows_icon" allow_editing="false" comment="File format for Windows icons">
    <define_struct type_name="BITMAPICONIMAGE" comment="Contains an icon image in bitmap format">
        <eval expr="bitmapOffset = addressof(this)" display_error="false" display_result="false"/>
        <struct name="header" type_name="BITMAPINFOHEADER" comment="DIB header">
            <data name="headerSize" type="int" len="4" format="signed" units="bytes" comment="Size of this structure" domain="this &gt;= 40"/>
            <data name="width" type="int" len="4" format="signed" units="pixels" domain="this &gt; 0"/>
            <data name="height" type="int" len="4" format="signed" units="pixels" domain="this &gt; 0" comment="Specifies the combined height of the XOR and AND masks"/>
            <data name="planes" type="int" len="2" format="signed" domain="this == 1" comment="These files always seem to contain just one plane."/>
            <data name="bitCount" type="int" len="2" domain="this==1||this==4||this==8||this==16||this==24||this==32" format="signed" comment="Bits per pixel. If 8 or less each pixel is an index into the palette.  If 16 or more the pixel itself contains the colour info." units="bits / pixel"/>
            <data name="compression" type="int" len="4" format="signed" comment="Not used."/>
            <data name="imageSize" type="int" len="4" format="signed" comment="Size of the bitmap itslef  - may be zero if compression is zero (off)." units="bytes"/>
            <data name="xPelsPerMeter" type="int" len="4" format="signed" units="pixels / meter" comment="Not used."/>
            <data name="yPelsPerMeter" type="int" len="4" format="signed" units="pixels / meter" comment="Not used."/>
            <data name="clrUsed" type="int" len="4" format="signed" comment="Not used."/>
            <data name="clrImportant" type="int" len="4" format="signed" comment="Not used."/>
        </struct>
        <if test="header.bitCount &lt; 16" comment="Colour lookup table.  This is not needed if the pixel values are actual colours and not indices into the palette.">
            <for name="colour" count="1 &lt;&lt; header.bitCount" stop_test="" type_name="" comment="Array of colours">
              <struct type_name="RGBQUAD" name="" comment="One colour - entry in the palette">
                  <data name="blue" type="int" format="unsigned" len="1"/>
                  <data name="green" type="int" format="unsigned" len="1"/>
                  <data name="red" type="int" format="unsigned" len="1"/>
                  <data name="resvd" type="int" format="unsigned" len="1" domain="this == 0" comment="Not currently used"/>
              </struct>
            </for>
        </if>
        <eval expr="xorSize = ((((header.bitCount*header.width)+31)/32)*4)*(header.height/2)" display_error="false" display_result="false"/>
        <eval expr="andSize = (((header.width+31)/32)*4)*(header.height/2)" display_error="false" display_result="false"/>
        <if test="header.imageSize == 0 || header.imageSize == (xorSize + andSize)">
            <struct name="pixelData" comment="Pixel data (XOR and AND mask)">
                <data name="xor" type="none" len="xorSize" comment="DIB bits for XOR mask"/>
                <data name="and" type="none" len="andSize" comment="DIB bits for monochrome AND mask"/>
            </struct>
        <else/>
            <data name="pixelData" type="none" len="imageBytes - (addressof(this) - bitmapOffset)" comment="Pixel data (possibly compressed)"/>
        </if>
    </define_struct>
    <eval expr="totalDataSize = 0" display_error="false" display_result="false"/>
    <eval expr="imageBytes = 0" display_error="false" display_result="false"/>
    <data name="reserved" type="int" format="unsigned" len="2" comment="Should always be 0"/>
    <data name="type" type="int" format="unsigned" len="2" domain="{ICON=1,CURSOR=2}" comment="1 for icon (.ICO), 2 for cursor (.CUR) file"/>
    <data name="count" type="int" format="unsigned" len="2" comment="Number of images in the file"/>
    <for name="icon" count="count" stop_test="" type_name="" comment="Stores general information about every image in the file.">
      <struct type_name="ICONDIRENTRY" comment="" expr="">
          <data name="width" type="int" format="unsigned" len="1"/>
          <data name="height" type="int" format="unsigned" len="1"/>
          <data name="colourCount" type="int" format="unsigned" len="1" comment="Number of colors in image (0 if &gt;=8bpp)"/>
          <data name="reserved" type="int" format="unsigned" len="1" comment="Should always be 0"/>
          <data name="planes" type="int" format="unsigned" len="2" comment="Colour planes"/>
          <data name="bitCount" type="int" format="unsigned" len="2" comment="Bits per pixel"/>
          <data name="bytesInRes" type="int" format="unsigned" len="4" comment="How many bytes in this resource?"/>
          <eval expr="imageBytes = bytesInRes" display_error="false" display_result="false"/>
          <eval expr="totalDataSize = totalDataSize + bytesInRes" display_error="false" display_result="false"/>
          <data name="imageOffset" type="int" format="unsigned" len="4" display="hex" comment="Where in the file is this image?"/>
          <jump offset="imageOffset" comment="" origin="start">
              <use_struct name="bitmapImage" expr="" type_name="BITMAPICONIMAGE" comment=""/>
          </jump>
      </struct>
    </for>
    <data name="" type="none" len="totalDataSize" comment="Skip past icon images already read in the jump"/>
</binary_file_format>